{"version":3,"sources":["screens/Auth/css/login.module.scss","screens/Auth/Login.js"],"names":["module","exports","container","background","shadow","wrapper","logo","password-wrapper","password","loading-wrapper","loading","topDown","bottomUp","Login","observer","handleClickShowPassword","_this","shouldShowPassword","onSubmit","_callee","e","_Users_yahyasahaja_Projects_ignitech_dental_care_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","preventDefault","user","login","email","sent","gotoDashboard","stop","this","_this2","setTimeout","isIn","isLoggedIn","props","history","push","tokenDisposer","observe","token","isSettingUp","name","value","target","isLoadingLogin","react__WEBPACK_IMPORTED_MODULE_11___default","createElement","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_22___default","className","styles","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_19___default","fullWidth","size","variant","color","style","marginTop","type","_material_ui_icons_Send__WEBPACK_IMPORTED_MODULE_20___default","marginLeft","_this3","isOut","animationName","src","alt","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_14___default","label","input","onChange","handleChange","bind","rowsMax","required","margin","autoComplete","InputProps","endAdornment","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_16___default","position","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_15___default","aria-label","onClick","_material_ui_icons_VisibilityOff__WEBPACK_IMPORTED_MODULE_18___default","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_17___default","renderButton","Component","observable"],"mappings":"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","file":"static/js/Login.80962419.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__3x0Xw\",\"background\":\"login_background__2411K\",\"shadow\":\"login_shadow__1W7U9\",\"wrapper\":\"login_wrapper__1UNTT\",\"logo\":\"login_logo__16tKu\",\"password-wrapper\":\"login_password-wrapper__3Tcf0\",\"password\":\"login_password__1QvQ3\",\"loading-wrapper\":\"login_loading-wrapper__21I6i\",\"loading\":\"login_loading__itq2l\",\"topDown\":\"login_topDown__1HfGa\",\"bottomUp\":\"login_bottomUp__1jxK2\"};","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\nimport { observable, observe } from 'mobx'\nimport TextField from '@material-ui/core/TextField'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/VisibilityOff'\nimport Button from '@material-ui/core/Button'\n// import Icon from '@material-ui/core/Icon'\nimport SendIcon from '@material-ui/icons/Send'\n\nimport styles from './css/login.module.scss'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { user, token } from '../../services/stores'\n\n@observer\nclass Login extends Component {\n  @observable shouldShowPassword = false\n  @observable email = ''\n  @observable password = ''\n  @observable isIn = false\n  @observable isOut = false\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.isIn = true\n    }, 100)\n\n    if (user.isLoggedIn) return this.props.history.push('/dashboard/home')\n    this.tokenDisposer = observe(token, 'isSettingUp', () => {\n      if (!token.isSettingUp && user.isLoggedIn) this.props.history.push('/dashboard/home')\n    })\n  }\n\n  componentWillUnmount() {\n    if (this.tokenDisposer) this.tokenDisposer()\n  }\n\n  handleChange(name, value) {\n    this[name] = value.target.value\n  }\n\n  handleClickShowPassword = () => {\n    this.shouldShowPassword = !this.shouldShowPassword\n  }\n\n  renderButton() {\n    if (user.isLoadingLogin) return <CircularProgress className={styles.loading} /> \n\n    return (\n      <Button \n        fullWidth \n        size=\"large\"\n        variant=\"contained\" \n        color=\"primary\"\n        style={{marginTop: 20, color: 'white'}}\n        type=\"submit\"\n      >\n        Send\n        {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\n        <SendIcon style={{marginLeft: 10}} />\n      </Button>\n    )\n  }\n\n  onSubmit = async e => {\n    e.preventDefault()\n\n    //login \n    let token = await user.login(this.email, this.password)\n    \n    if (token) {\n      this.gotoDashboard()\n    }\n  }\n\n  gotoDashboard() {\n    this.isOut = true\n    setTimeout(() => this.props.history.push('/dashboard'), 600)\n  }\n\n  render() {\n    if (token.isSettingUp) return (\n      <div className={styles['loading-wrapper']} >\n        <CircularProgress className={styles.loading} /> \n      </div>\n    )\n\n    return (\n      <div className={styles.container} >\n        <form \n          className={styles.wrapper} \n          onSubmit={this.onSubmit} \n          style={{animationName: this.isOut ? styles.bottomUp : this.isIn ? styles.topDown : ''}}\n        >\n          <div className={styles.logo} >\n            <img src=\"/image/logo.png\" alt=\"\"/>\n          </div>\n\n          <TextField\n            name=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            className={styles.input}\n            onChange={this.handleChange.bind(this, 'email')}\n            value={this.email}\n            fullWidth\n            rowsMax={6}\n            required\n            margin=\"normal\"\n            variant=\"outlined\"\n          />\n\n          <div className={styles['password-wrapper']}>\n            <TextField\n              name=\"password\"\n              type={this.shouldShowPassword ? 'text' : 'password'}\n              label=\"Password\"\n              className={styles.password}\n              onChange={this.handleChange.bind(this, 'password')}\n              value={this.password}\n              required\n              fullWidth\n              autoComplete=\"current-password\"\n              variant=\"outlined\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"Toggle password visibility\"\n                      onClick={this.handleClickShowPassword}\n                    >\n                      {this.shouldShowPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n\n          {this.renderButton()}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Login"],"sourceRoot":""}